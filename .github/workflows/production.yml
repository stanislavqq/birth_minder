name: Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DEPLOY_PATH: /home/${{ secrets.SERVER_USERNAME }}/application
  BUILD_PATH: bin
  BUILD_APP_NAME: bminder

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go mod download && CGO_ENABLED=0 go build -o ./bin/${{ env.BUILD_APP_NAME }} ./cmd/birth_minder/main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: ${{ env.BUILD_PATH }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Test
        run: CGO_ENABLED=0 go test -v -timeout 30s -coverprofile cover.out ./...

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    env:
      APP_FORMAT_MSG: "🎉🎉🎉\\nНапоминание о днюхе: \\n\\n {fullname} :: {soon_time}"
      DEBUG_MODE: false
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Get build
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: ${{ env.BUILD_PATH }}

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_SECRET_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avzr --rsh=ssh ${{ env.BUILD_PATH }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ env.DEPLOY_PATH }}

      - name: Copy migrations
        run: rsync -avzr --rsh=ssh migrations ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ env.DEPLOY_PATH }}

      - name: Copy config
        run: rsync -avzP --rsh=ssh config.dist.yml ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ env.DEPLOY_PATH }}/config.yml

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_SECRET_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: | 
            export DEBUG_MODE=${{ env.DEBUG_MODE }}
            export DB_HOST=${{ env.DB_HOST }}
            export DB_NAME=${{ env.DB_NAME }}
            export DB_PORT=${{ env.DB_PORT }}
            export DB_USER=${{ env.DB_USER }}
            export DB_PASS=${{ env.DB_PASS }}
            export TG_TOKEN=${{ env.TG_TOKEN }}
            export TG_CHAT_ID=${{ env.TG_CHAT_ID }}
            
            cd /home/${{ secrets.SERVER_USERNAME }}/application
            ./${{ env.BUILD_APP_NAME }} -migration